<?xml version="1.0" encoding="utf-8"?>
<flow name="DoctorFlow" package="iristk.app.doctor" 
	initial="Idle" xmlns="iristk.flow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="iristk.flow.param"
	xmlns:dialog="iristk.situated.SituatedDialog"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SituatedDialog SituatedDialog.xsd">
	
	<import class="iristk.app.quiz.Question"/>
	<import class="iristk.app.quiz.QuestionSet"/>
	
	<param name="questions" type="QuestionSet"/>
	<param name="dialog" type="iristk.situated.SituatedDialog"/>
	
	<var name="users" type="iristk.situated.UserModel" value="dialog.getUsers()"/>
	<var name="question" type="Question"/>
	<var name="guess" type="int" value="0"/>
	<var name="winningScore" type="int" value="3"/>
	<var name="doctor" type="Doctor" value="new Doctor()"/>
	
	
	
	<state id="Idle">
		<onentry>
			<dialog:attendNobody />
		</onentry>
		<onevent name="sense.user.enter">
			<dialog:attend target="event:agent"/>
			<dialog:say>Hi there</dialog:say>
			<send event="action.gesture" p:name="'smile'"/>
			<goto state="Question1"/>
		</onevent>
	</state>
	
	<state id="Dialog">
		<onevent name="sense.user.leave"  cond="users.isAttending(event) or users.isAttendingAll()">
			<if cond="users.hasAny()">
				<dialog:attendRandom/>
				<reentry/>
			<else />
				 <goto state="Goodbye"/>
			</if>
		</onevent>
	</state>
	
	<state id="Goodbye">
		<onentry>
			<dialog:say>Goodbye</dialog:say>
			<goto state="Idle"/>
		</onentry>
	</state>
	
	
	<state id="Question1"  extends="Dialog">
		<onentry>
			<if cond="users.hasMany()">
				<dialog:attendAll/>
			</if>
			<dialog:say>How do you feel?</dialog:say>
			<send event="action.gesture" p:name="'sleep'"/>
			<dialog:listen/>
			
		</onentry>
		<onevent name="sense.user.speech**" cond="event?:sem:good">
		<dialog:say>Oh, then you don't need me!</dialog:say>
			<goto state="Goodbye"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:bad">
			<dialog:say>Okay, let's see if I can help you!</dialog:say>
			 <goto state="soar_throat"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
			<reentry/>
		</onevent>
		<onevent name="sense.user.speech**">
			<reentry/>
		</onevent>
	</state>
	
	<state id="soar_throat"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have a soar throat?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.SOARTHROAT)</exec>
			<dialog:say>You have a soar throat!</dialog:say>
			<send event="action.gesture" p:name="'emotion_anger'"/>
			<exec>doctor.writeSymptom(Symptom.SOARTHROAT)</exec>
			<goto state="cough"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.SOARTHROAT)</exec>
			<send event="action.gesture" p:name="'wake_up'"/>
			<goto state="cough"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
		
		
		<!--  I think you should do test cases into one "onevent" bloc instead of several "onevent" blocs
		since the event name is the same. I think it will be more readable this way. -->
		
		
	</state>
	
	<state id="cough"  extends="Dialog">
		<onentry>
			<!-- So smooth ! (3) -->
			<dialog:say>Are you suffering from cough?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<!-- So smooth ! (4) -->
			<exec>doctor.askSymptom(Symptom.COUGH)</exec>
			<exec>doctor.writeSymptom(Symptom.COUGH)</exec>
			<dialog:say>Okay</dialog:say>
			<goto state="headache"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.COUGH)</exec>
			<dialog:say>Good for you</dialog:say>
			<goto state="headache"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	
	<state id="headache"  extends="Dialog">
		
		
		<!-- Your turn to be smooth now ! See the Symptom.java file. -->
		
		
		<onentry>
			<dialog:say>Are you suffering from headache?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.HEADACHE)</exec>
			<exec>doctor.writeSymptom(Symptom.HEADACHE)</exec>
			<dialog:say>Okay</dialog:say>
			<goto state="sleepy"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.HEADACHE)</exec> 
			<dialog:say>Good for you</dialog:say>
			<goto state="sleepy"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	
	<state id="sleepy"  extends="Dialog">
		<onentry>
			<dialog:say>Are you sleepy?</dialog:say>
			<dialog:listen/>
			
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.SLEEPY)</exec>
			<exec>doctor.writeSymptom(Symptom.SLEEPY)</exec>
			<dialog:say>Okay</dialog:say>
			<goto state="fever"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.SLEEPY)</exec>
			<dialog:say>Good for you, pneumonia</dialog:say>
			<goto state="fever"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="fever"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have fever?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
		<exec>doctor.askSymptom(Symptom.FEVER)</exec>
		<exec>doctor.writeSymptom(Symptom.FEVER)</exec>
			<dialog:say>Okay</dialog:say>
			<goto state="pain"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.FEVER)</exec>
			<dialog:say>Good for you</dialog:say>
			<goto state="pain"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="pain"  extends="Dialog">
		<onentry>
			<dialog:say>Are you in pain?</dialog:say>
			<send event="action.gesture" p:name="'emotion_anger'"/>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.PAIN)</exec>
			<dialog:say>Where are you suffering from pain? In your eyes, your ears, your muscles or your chest?</dialog:say>
			<goto state="whatpain"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.PAIN)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="evaluate"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="repain"  extends="Dialog">
		<onentry>
			<dialog:say>Are you in pain in another bodypart?</dialog:say>
			<send event="action.gesture" p:name="'emotion_anger'"/>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<dialog:say>Which one?</dialog:say> 
			<goto state="whatpain"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<dialog:say>Keep it up!</dialog:say>
			<goto state="evaluate"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="whatpain"  extends="Dialog">
		<onentry>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:eyes"> 
		<exec>doctor.writeSymptom(Symptom.PAIN_EYES)</exec>
			<dialog:say>Okay, your eyes</dialog:say>
			<goto state="repain"/>
			
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:ears"> 
		<exec>doctor.writeSymptom(Symptom.PAIN_EARS)</exec>	
			<dialog:say>Okay, your ears</dialog:say>
			<goto state="repain"/>
			
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:muscles">
			<exec>doctor.writeSymptom(Symptom.PAIN_MUSCLES)</exec>	
			<dialog:say>Okay, your muscles</dialog:say>
			<goto state="repain"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:chest"> 
			<exec>doctor.writeSymptom(Symptom.PAIN_CHEST)</exec>	
			
			<dialog:say>Okay, your chest</dialog:say>
			<goto state="repain"/>
			
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
	
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="evaluate">
		<onentry>
		<!-- <exec>System.out.println(doctor.evaluate())</exec>-->
		<!-- You proceed to the evaluation two times in a row. Ask me what
		you wanted to do there. -->
		<exec>doctor.addCheckedDisease(doctor.evaluate())</exec>
		<var name="c" type = "String" value="doctor.evaluate()"/>
		
		 <if cond="c=='LYME'">
		 	<goto state="weight_loss"/>
		 </if>
		 <if cond="c=='OTITIS'">
		 	<goto state="bad_hearing"/>
		 </if>
		 <if cond="c=='CONCUSSION'">
		 	<goto state="dizzy"/>	 
		 </if>
		 <if cond="c=='MYOCARDITIS'">
		 <goto state="arythmia"/>
		 </if>
		 <if cond="c=='COMMONCOLD'">
		 	<goto state="runnose"/>
		 </if>
		 <if cond="c=='FLU'">
		 	<goto state="frozen"/>
		 </if>
		 <if cond="c=='PNEUMONIA'">
		 	<goto state="mucus"/>
		 </if>
		 <if cond="c=='BRONCHITIS'">
		 	<goto state="hissing"/>
		 </if>
		 <if cond="c=='MONO'">
		 	<goto state="swollen"/>
		 </if>
		 
		 
		 
		<!-- Okay I've not seen the 'c' thing. We'll need to discuss about how you can get and test the percentages.
		Perhaps the following seems OK -->
		
		
		<!-- 
			Ta ut första sjukdomen i listan och sedan "hoppa" in i dess följfrågor		
		 -->
		
	
		</onentry>
	</state>
	
	
	<state id="frozen"  extends="Dialog">
		<onentry>	
			<dialog:say>Are you frozen?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.FROZEN)</exec>
			<exec>doctor.writeSymptom(Symptom.FROZEN)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="runnose"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.FROZEN)</exec>
			<dialog:say>Good for you</dialog:say>
			<goto state="runnose"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="runnose"  extends="Dialog">
		<onentry>	
			<dialog:say>Do you have a runny nose?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.RUNNY_NOSE)</exec>
			<exec>doctor.writeSymptom(Symptom.RUNNY_NOSE)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="endevaluation"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.RUNNY_NOSE)</exec>
			<dialog:say>Good for you</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="dizzy"  extends="Dialog">
		<onentry>
			<exec>doctor.askSymptom(Symptom.DIZZY)</exec>	
			<dialog:say>Are you feeling dizzy?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.DIZZY)</exec>	 
			<exec>doctor.writeSymptom(Symptom.DIZZY)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="nausea"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.DIZZY)</exec>	
			<dialog:say>Good for you</dialog:say>
			<goto state="nausea"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="nausea"  extends="Dialog">
		<onentry>	
			<dialog:say>Are you nauseous?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.NAUSEA)</exec> 
			<exec>doctor.writeSymptom(Symptom.NAUSEA)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="vomit"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.NAUSEA)</exec>
			<dialog:say>Good for you</dialog:say>
			<goto state="vomit"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="vomit"  extends="Dialog">
		<onentry>
			<dialog:say>Have you vomited?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.VOMIT)</exec>	
			<exec>doctor.writeSymptom(Symptom.VOMIT)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="amnesia"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.VOMIT)</exec>	
			<dialog:say>Good for you</dialog:say>
			<goto state="amnesia"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="amnesia"  extends="Dialog">
		<onentry>
			<dialog:say>Are you experiencing amnesia?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes"> 
			<exec>doctor.askSymptom(Symptom.AMNESIA)</exec>	
			<exec>doctor.writeSymptom(Symptom.AMNESIA)</exec>	
			<dialog:say>Okay</dialog:say>
			<goto state="endevaluation"/>
			
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.AMNESIA)</exec>	
			<dialog:say>Good for you</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	

	
	<state id="bad_hearing"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have a bad hearing?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.BAD_HEARING)</exec>
			<exec>doctor.writeSymptom(Symptom.BAD_HEARING)</exec> 
			<goto state="poor_appetite"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.BAD_HEARING)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="poor_appetite"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	<state id="poor_appetite"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have a poor appetite?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.BAD_APPETITE)</exec>
			<exec>doctor.writeSymptom(Symptom.BAD_APPETITE)</exec> 
			<goto state="irritated"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.BAD_APPETITE)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="irritated"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>

	<state id="irritated"  extends="Dialog">
		<onentry>
			<dialog:say>Do you feel irritated?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.IRRITATED)</exec>
			<exec>doctor.writeSymptom(Symptom.IRRITATED)</exec> 
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.IRRITATED)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="hissing"  extends="Dialog">
		<onentry>
			<dialog:say>Do you hear a hissing sound when you breath?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.HISSING_SOUND)</exec>
			<exec>doctor.writeSymptom(Symptom.HISSING_SOUND)</exec> 
			<goto state="trouble_breathing"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.HISSING_SOUND)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="trouble_breathing"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="trouble_breathing"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have a trouble breathing?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.TROUBLE_BREATHING)</exec>
			<exec>doctor.writeSymptom(Symptom.TROUBLE_BREATHING)</exec> 
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.TROUBLE_BREATHING)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="swollen"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have swollen lymph nodes, neck, armpits and groin?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.SWOLLEN)</exec>
			<exec>doctor.writeSymptom(Symptom.SWOLLEN)</exec> 
			<goto state="diff_swall"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.SWOLLEN)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="diff_swall"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="diff_swall"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have trouble swalloing?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.DIFF_SWALL)</exec>
			<exec>doctor.writeSymptom(Symptom.DIFF_SWALL)</exec> 
			<goto state="bad_breath"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.DIFF_SWALL)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="bad_breath"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="bad_breath"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have a bad breath?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.BAD_BREATH)</exec>
			<exec>doctor.writeSymptom(Symptom.BAD_BREATH)</exec> 
			<goto state="enlarged_tonsils"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.BAD_BREATH)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="enlarged_tonsils"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="enlarged_tonsils"  extends="Dialog">
		<onentry>
			<dialog:say>Are your tonsils enlarged?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.ENLARGED_TONSILS)</exec>
			<exec>doctor.writeSymptom(Symptom.ENLARGED_TONSILS)</exec> 
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.ENLARGED_TONSILS)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="arythmia"  extends="Dialog">
		<onentry>
			<dialog:say>Are you experiencing arythmia?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.ARYTHMIA)</exec>
			<exec>doctor.writeSymptom(Symptom.ARYTHMIA)</exec> 
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.ARYTHMIA)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="mucus"  extends="Dialog">
		<onentry>
			<dialog:say>Are you experiencing that your mucus is in a green or brown color?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.MUCUS)</exec>
			<exec>doctor.writeSymptom(Symptom.MUCUS)</exec> 
			<goto state="trouble_breathing"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.MUCUS)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="trouble_breathing"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="weight_loss"  extends="Dialog">
		<onentry>
			<dialog:say>Have you lost weight?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.WEIGHT_LOSS)</exec>
			<exec>doctor.writeSymptom(Symptom.WEIGHT_LOSS)</exec> 
			<goto state="temp_face_paralysis"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<exec>doctor.askSymptom(Symptom.WEIGHT_LOSS)</exec> 
			<dialog:say>Keep it up!</dialog:say>
			<goto state="temp_face_paralysis"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	<state id="temp_face_paralysis"  extends="Dialog">
		<onentry>
			<dialog:say>Do you have swollen lymph nodes, neck, armpits and groin?</dialog:say>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<exec>doctor.askSymptom(Symptom.TEMP_FACE_PARALYSIS)</exec>
			<exec>doctor.writeSymptom(Symptom.TEMP_FACE_PARALYSIS)</exec> 
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:no"> 
			<exec>doctor.askSymptom(Symptom.TEMP_FACE_PARALYSIS)</exec>
			<dialog:say>Keep it up!</dialog:say>
			<goto state="endevaluation"/>
		</onevent>
		
		<onevent name="sense.user.speech**" cond="event?:sem:repeat">
				<reentry/>
			</onevent>
		<onevent name="sense.user.speech**">
				<reentry/>
		</onevent>
	</state>
	
	
	<state id="endevaluation"  extends="Dialog">
		<onentry>
		
		<!-- explain me what you want to do here too -->
		<var name="disease" type = "Disease" value="doctor.evaluate()"/>
		<var name="d" type="String" value="disease.name()"/>

		 <if cond="doctor.printCheckedDiseases.contains(d)">
			 <if cond="d=='LYME'">
			 	<dialog:say>You are suffering from lyme disease</dialog:say>
			 </if>
			 <if cond="d=='OTITIS'">
			 	<dialog:say>You are suffering from otitis</dialog:say>
			 </if>
			 <if cond="d=='CONCUSSION'">
			 	<dialog:say>You are suffering from concussion</dialog:say> 
			 </if>
			 <if cond="d=='MYOCARDITIS'">
			 <dialog:say>You are suffering from myocarditis</dialog:say>
			 </if>
			 <if cond="d=='COMMONCOLD'">
			 	<dialog:say>You are suffering from common cold</dialog:say>
			 </if>
			 <if cond="d=='FLU'">
			 	<dialog:say>You are suffering from flu</dialog:say>
			 </if>
			 <if cond="d=='PNEUMONIA'">
			 	<dialog:say>You are suffering from pneumonia</dialog:say>
			 </if>
			 <if cond="d=='BRONCHITIS'">
			 	<dialog:say>You are suffering from bronchitis</dialog:say>
			 </if>
			 <if cond="d=='MONO'">
			 	<dialog:say>You are suffering from mono</dialog:say>
			 </if>

		 <else />
		 	<goto state="evaluate"/>
		 </if>
		
		
			
		</onentry>
	</state>
	

<!--  	<state id="Idle">
		<onentry>
			<dialog:attendNobody />
		</onentry>
		<onevent name="sense.user.enter">
			<dialog:attend target="event:agent"/>
			<dialog:say>Hi there</dialog:say>
			<goto state="RequestGame"/>
		</onevent>
	</state>
		
	<state id="Dialog">
		<onevent name="sense.user.leave"  cond="users.isAttending(event) or users.isAttendingAll()">
			<if cond="users.hasAny()">
				<dialog:attendRandom/>
				<reentry/>
			<else />
				<goto state="Goodbye"/>
			</if>
		</onevent>
	</state>
	
	<state id="RequestGame" extends="Dialog">
		<onentry>
			<if cond="users.hasMany()">
				<dialog:attendAll/>
			</if>
			<dialog:say>Do you want to play a game?</dialog:say>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speech**" cond="event?:sem:yes">
			<goto state="StartGame"/>
		</onevent>
		<onevent name="sense.user.speech**" cond="event?:sem:no">
			<dialog:say>Okay, maybe another time then</dialog:say>
			<goto state="Goodbye"/>
		</onevent>
		<onevent name="sense.user.speech**">
			<reentry/>
		</onevent>
	</state>
	
	<state id="StartGame" extends="Dialog">
		<onentry>
			<if cond="users.hasMany()">
				<dialog:attendAll/>
				<dialog:say>Okay, let's play a game of quiz. The first to reach <expr>winningScore</expr> points is the winner.</dialog:say>
			<else/>
				<dialog:say>Okay, let's play a game of quiz. Let's try to see if you can get <expr>winningScore</expr> points.</dialog:say>
			</if>
			<goto state="NextQuestion"/>
		</onentry>
	</state>
	
	<state id="Goodbye">
		<onentry>
			<dialog:say>Goodbye</dialog:say>
			<goto state="Idle"/>
		</onentry>
	</state>
	
	<state id="NextQuestion" extends="Dialog">
		<onentry>
			<exec>question = questions.next(); guess = 0</exec>
			<if cond="users.hasMany()">
				<random>
					<block>
						<dialog:attendOther/>
						<dialog:say>The next one is for you</dialog:say>
					</block>
					<block>
						<dialog:attendAll/>
						<dialog:say>Let's see who answers first</dialog:say>
					</block>
				</random>
			<else/>
				<dialog:say>Here comes the next question</dialog:say>
			</if>
			<goto state="ReadQuestion"/>
		</onentry>
	</state>
	
	<state id="ReadQuestion" extends="AwaitAnswer">
		<onentry>
			<dialog:say text="question.getFullQuestion()"/>
			<dialog:listen grammar="asList('default', question.getId())"/>
		</onentry>
	</state>
	
	<state id="ReadOptions" extends="AwaitAnswer">
		<onentry>
			<dialog:say text="question.getOptions()"/>
			<dialog:listen grammar="asList('default', question.getId())"/>
		</onentry>
	</state>
	
	<state id="AwaitAnswer" extends="Dialog">
		<onentry>
			<dialog:listen grammar="asList('default', question.getId())"/>
		</onentry>
		<onevent name="sense.user.speech.multi">
			<if cond="eq(event:sem:answer,question:correct)">
				<dialog:attend target="event:agent"/>
				<goto state="CorrectAnswer"/>
			<elseif cond="eq(event:other:sem:answer,question:correct)"/>
				<dialog:attend target="event:other:agent"/>
				<goto state="CorrectAnswer"/>
			<else/>
				<dialog:say>None of you were correct, let's try another question.</dialog:say>
				<goto state="NextQuestion"/>
			</if>
		</onevent>
		<onevent name="sense.user.speech">
			<if cond="eq(event:sem:answer,question:correct)">
				<goto state="CorrectAnswer"/>
				<else/>
				<goto state="IncorrectAnswer"/>
			</if>
		</onevent>
		<onevent name="sense.user.speech.other">
			<dialog:attendOther mode="'eyes'"/>
			<dialog:say>You were not supposed to answer that</dialog:say>
			<dialog:attendOther mode="'eyes'"/>
			<dialog:say>So, what is your answer?</dialog:say>
			<goto state="AwaitAnswer"/>
		</onevent>
		<onevent name="sense.user.speech.silence">
			<raise event="skip"/>
		</onevent>
		<onevent name="skip">
			<dialog:say>Give me your best guess</dialog:say>
			<goto state="AwaitAnswer"/>
		</onevent>
	</state>
	
	<state id="CorrectAnswer" extends="Dialog">
		<onentry>
			<exec>users:current:score = asInteger(users:current:score,0) + 1</exec>
			<dialog:say>That is correct, you now have a score of <expr>users:current:score</expr></dialog:say>
			<if cond="asInteger(users:current:score,0) &gt;= winningScore">
				<goto state="Winner"/>
			<else/>
				<goto state="NextQuestion"/>
			</if>
		</onentry>
	</state>
	
	<state id="IncorrectAnswer" extends="Dialog">
		<onentry>
			<dialog:say>That was wrong</dialog:say>
			<if cond="users.hasMany() and guess == 0">
				<exec>guess++</exec>
				<dialog:attendOther/>
				<dialog:say>Maybe you know the answer?</dialog:say>
				<goto state="AwaitAnswer"/>
			</if>
			<dialog:say>The correct answer was <expr>question:(question:correct)</expr></dialog:say>
			<goto state="NextQuestion"/>
		</onentry>
	</state>
	
	<state id="Winner" extends="Dialog">
		<onentry>
			<exec>users:current:score = 0</exec>
			<dialog:say>Congratulations, you are the winner</dialog:say>
			<if cond="users.hasMany()">
				<dialog:attendOther/>
				<exec>users:current:score = 0</exec>
				<dialog:say>I am sorry, but you lost.</dialog:say>
			</if>
			<goto state="Goodbye"/>
		</onentry>
	</state> -->

</flow>